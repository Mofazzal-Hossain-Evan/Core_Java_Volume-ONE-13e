package DinosaurDNAComparator;

import java.lang.reflect.Array;
import java.util.Arrays;
import java.util.Objects;

import static SmartComparisonEngine.DeepComparer.deepPrint;

public class DeepComparer {

    public static void compareObject(Object a, Object b){
        System.out.println("üî¨ Comparing Objects:");
        System.out.println("üÖ∞Ô∏è " + deepPrint(a));
        System.out.println("üÖ±Ô∏è " + deepPrint(b));

        boolean equal = Objects.equals(a, b);
        boolean hashMatch = a != null && b != null && a.hashCode() == b.hashCode();
        System.out.println("‚úî equals(): "+ equal);
        System.out.println("‚úî hashCode match: "+ hashMatch);

        if (equal && !hashMatch){
            System.out.println("‚ö†Ô∏è Warning: equals() true but hashCodes differ!");
        } else if (!equal && hashMatch) {
            System.out.println("üòÆ Strange: hashCodes same but not equal.");
        }


        System.out.println("-----------------------------------");
    }

    public static String deepPrint(Object obj){
        if (obj ==  null) return "Null";
        if (obj.getClass().isArray()){
            return Arrays.deepToString(new Object[]{obj});
        }
        return obj.toString();
    }
}

//Objects ‡¶π‡¶≤‡ßã ‡¶è‡¶ï‡¶ü‡¶ø class (java.util.Objects), ‡¶Ø
// ‡ßá‡¶ü‡¶æ utility method ‡¶¶‡ßá‡ßü equals, hash, requireNonNull ‡¶á‡¶§‡ßç‡¶Ø‡¶æ‡¶¶‡¶ø‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø‡•§

//‡¶ï‡¶ø‡¶®‡ßç‡¶§‡ßÅ deepPrint ‡¶Æ‡ßá‡¶•‡¶°‡ßá ‡¶Ü‡¶Æ‡¶∞‡¶æ obj ‡¶™‡ßç‡¶Ø‡¶æ‡¶∞‡¶æ‡¶Æ‡¶ø‡¶ü‡¶æ‡¶∞ ‡¶π‡¶ø‡¶∏‡ßá‡¶¨‡ßá ‡¶™‡¶æ‡¶†‡¶æ‡¶§‡ßá ‡¶ö‡¶æ‡¶á‡¶õ‡¶ø ‡¶Ø‡ßá‡¶ï‡ßã‡¶®‡ßã Object,
// ‡¶Ö‡¶∞‡ßç‡¶•‡¶æ‡ßé java.lang.Object‡•§
