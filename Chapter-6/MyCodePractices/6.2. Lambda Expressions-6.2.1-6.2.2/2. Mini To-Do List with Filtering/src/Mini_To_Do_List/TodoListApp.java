package Mini_To_Do_List;

import java.util.*;

public class TodoListApp {
    public static void main(String[] args) {
        List<Task> tasks = new ArrayList<>();
        tasks.add(new Task("Finish Java homework", false));
        tasks.add(new Task("Debug the Matrix", true));
        tasks.add(new Task("Feed the Code Gremlins", false));
        tasks.add(new Task("Read Lambda chapter", true));

        System.out.println("All Tasks:");
        tasks.forEach(System.out::println);

        // тЬЕ Completed ржЯрж╛рж╕рзНржХржЧрзБрж▓рзЛ ржлрж┐рж▓рзНржЯрж╛рж░
        System.out.println("\nCompleted Tasks:");
        tasks.stream()
                .filter(task -> task.completed)
                .forEach(System.out::println);

        // тЭМ Pending ржЯрж╛рж╕рзНржХржЧрзБрж▓рзЛ ржлрж┐рж▓рзНржЯрж╛рж░
        System.out.println("\nPending Tasks:");
        tasks.stream()
                .filter(task -> !task.completed)
                .forEach(System.out::println);

        // ЁЯФН ржЯрж╛ржЗржЯрзЗрж▓ ржЕржирзБржпрж╛рзЯрзА ржлрж┐рж▓рзНржЯрж╛рж░ (ржпрзЗржоржи "Java" ржЖржЫрзЗ ржПржоржи ржЯрж╛рж╕рзНржХ)
        System.out.println("\nTasks with 'Java' in title:");
        tasks.stream()
                .filter(task -> task.title.contains("Java"))
                .forEach(System.out::println);
    }
}
/***
 ржарж┐ржХ ржЖржЫрзЗ ЁЯСН рждрзБржорж┐ ржпрзЗ ржЕржВрж╢ржЯрж╛ рж╢рж┐ржЦрждрзЗ ржЪрж╛ржЗржЫрзЛ рж╕рзЗржЯрж╛ ржорзВрж▓ржд **Java Streams API + Lambda Expressions** ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ ржлрж┐рж▓рзНржЯрж╛рж░ ржХрж░рж╛рж░ ржкржжрзНржзрждрж┐ред ржЖрж╕рзНрждрзЗ ржЖрж╕рзНрждрзЗ ржмрзНрж░рзЗржХржбрж╛ржЙржи ржХрж░рж┐ред

 ---

 ## ЁЯФ╣ ржХрзЛржб ржмрзНрж▓ржХ

 ```java
 // тЬЕ Completed ржЯрж╛рж╕рзНржХржЧрзБрж▓рзЛ ржлрж┐рж▓рзНржЯрж╛рж░
 System.out.println("\nCompleted Tasks:");
 tasks.stream()
 .filter(task -> task.completed)
 .forEach(System.out::println);

 // тЭМ Pending ржЯрж╛рж╕рзНржХржЧрзБрж▓рзЛ ржлрж┐рж▓рзНржЯрж╛рж░
 System.out.println("\nPending Tasks:");
 tasks.stream()
 .filter(task -> !task.completed)
 .forEach(System.out::println);

 // ЁЯФН ржЯрж╛ржЗржЯрзЗрж▓ ржЕржирзБржпрж╛рзЯрзА ржлрж┐рж▓рзНржЯрж╛рж░ (ржпрзЗржоржи "Java" ржЖржЫрзЗ ржПржоржи ржЯрж╛рж╕рзНржХ)
 System.out.println("\nTasks with 'Java' in title:");
 tasks.stream()
 .filter(task -> task.title.contains("Java"))
 .forEach(System.out::println);
 ```

 ---

 ## ЁЯФ╣ ржзрж╛ржкрзЗ ржзрж╛ржкрзЗ ржмрзНржпрж╛ржЦрзНржпрж╛

 ### 1. `tasks.stream()`

 ЁЯСЙ `tasks` рж╣рж▓рзЛ `ArrayList<Task>`
 ЁЯСЙ `.stream()` ржорж╛ржирзЗ рж╣рж▓рзЛ рж▓рж┐рж╕рзНржЯржЯрж╛ржХрзЗ **рж╕рзНржЯрзНрж░рж┐ржорзЗ рж░рзВржкрж╛ржирзНрждрж░ ржХрж░рж╛** ржпрж╛рждрзЗ ржЖржорж░рж╛ ржлрж┐рж▓рзНржЯрж╛рж░, ржорзНржпрж╛ржк, рж╕рзЛрж░рзНржЯ, ржЗрждрзНржпрж╛ржжрж┐ ржХрж░рждрзЗ ржкрж╛рж░рж┐ред

 ---

 ### 2. `.filter(task -> task.completed)`

 ЁЯСЙ ржПржЦрж╛ржирзЗ `filter` ржорж╛ржирзЗ **рж╢рзБржзрзБ рж╕рзЗржЗ ржЯрж╛рж╕рзНржХржЧрзБрж▓рзЛ рж░рж╛ржЦрзЛ ржпрзЗржЧрзБрж▓рзЛ рж╢рж░рзНржд ржкрзВрж░ржг ржХрж░рзЗред**
 ЁЯСЙ `task -> task.completed` рж╣рж▓рзЛ ржПржХржЯрж┐ **lambda expression**
 ржорж╛ржирзЗ:

 * ржкрзНрж░рждрж┐ржЯрж┐ `task` ржЕржмржЬрзЗржХрзНржЯ ржирж╛ржУ
 * ржпржжрж┐ рждрж╛рж░ `completed == true` рж╣рзЯ рждржмрзЗ рж░рж╛ржЦрзЛ

 ---

 ### 3. `.forEach(System.out::println)`

 ЁЯСЙ ржлрж┐рж▓рзНржЯрж╛рж░ ржХрж░рж╛рж░ ржкрж░ ржкрзНрж░рждрж┐ржЯрж┐ ржЯрж╛рж╕рзНржХржХрзЗ ржкрзНрж░рж┐ржирзНржЯ ржХрж░рзЛред
 ЁЯСЙ `System.out::println` рж╣рж▓рзЛ **method reference** ржпрж╛ рж▓рж┐ржЦрждрзЗ `task -> System.out.println(task)` ржПрж░ рж╕ржорж╛ржиред

 ---

 ### 4. `.filter(task -> !task.completed)`

 ЁЯСЙ `!task.completed` ржорж╛ржирзЗ рж╣рж▓рзЛ **ржпрзЗрж╕ржм ржЯрж╛рж╕рзНржХ рж╢рзЗрж╖ рж╣рзЯржирж┐ (false)** рж╢рзБржзрзБ рж╕рзЗржЧрзБрж▓рзЛ рж░рж╛ржЦрзЛред
 ЁЯСЙ ржПржнрж╛ржмрзЗ Pending ржЯрж╛рж╕рзНржХржЧрзБрж▓рзЛ ржмрзЗрж░ рж╣рзЯред

 ---

 ### 5. `.filter(task -> task.title.contains("Java"))`

 ЁЯСЙ ржПржЦрж╛ржирзЗ ржлрж┐рж▓рзНржЯрж╛рж░ ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ **рж╢рж┐рж░рзЛржирж╛ржорзЗ тАЬJavaтАЭ рж╢ржмрзНржж ржЖржЫрзЗ ржХрж┐ржирж╛**ред
 ЁЯСЙ `String.contains("Java")` ржорж╛ржирзЗ рж╣рж▓рзЛ рж╕рж╛ржмрж╕рзНржЯрзНрж░рж┐ржВ ржЦрзЛржБржЬрж╛ред
 ржпрзЗржоржи:

 * `"Learn Java Basics".contains("Java") тЬЕ true`
 * `"Go to Gym".contains("Java") тЭМ false`

 ---

 ## ЁЯФ╣ ржЖржЙржЯржкрзБржЯ ржХрзЗржоржи рж╣ржмрзЗ (ржЙржжрж╛рж╣рж░ржг)

 ржзрж░рж┐ ржЖржорж╛ржжрзЗрж░ рж▓рж┐рж╕рзНржЯрзЗ ржПржЗ ржЯрж╛рж╕рзНржХржЧрзБрж▓рзЛ ржЖржЫрзЗ:

 ```java
 [Task: Learn Java Basics (Completed),
 Task: Finish Homework (Pending),
 Task: Advanced Java Project (Completed)]
 ```

 ЁЯСЙ ржЖржЙржЯржкрзБржЯ рж╣ржмрзЗ:

 ```
 Completed Tasks:
 Learn Java Basics (Completed)
 Advanced Java Project (Completed)

 Pending Tasks:
 Finish Homework (Pending)

 Tasks with 'Java' in title:
 Learn Java Basics (Completed)
 Advanced Java Project (Completed)
 ```

 ---

 ржЪрж╛ржЗрж▓рзЗ ржЖржорж┐ рждрзЛржорж╛ржХрзЗ **step-by-step ржХрзЛржб рж▓рж┐ржЦрзЗ ржЪрж╛рж▓рж╛ржирзЛ ржжрзЗржЦрж╛рждрзЗ ржкрж╛рж░рж┐** тАФ ржпрзЗржоржи ржкрзНрж░ржержорзЗ рж╢рзБржзрзБ Completed filter, рждрж╛рж░ржкрж░ Pending, рждрж╛рж░ржкрж░ Title filter ржЖрж▓рж╛ржжрж╛ ржЖрж▓рж╛ржжрж╛ ржХрж░рзЗред

 рждрзБржорж┐ ржХрж┐ рж╕рзЗржЯрж╛ ржжрзЗржЦрждрзЗ ржЪрж╛ржУ?



 ***/